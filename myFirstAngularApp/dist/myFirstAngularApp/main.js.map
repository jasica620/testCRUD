{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Restful Tasks API\\n  </h1>\\n</div>\\n\\n<button (click) = \\\"showData()\\\">Get All Tasks</button>\\n\\n<ul *ngIf = \\\"button\\\">\\n  <h2>All the tasks:</h2>\\n  <li *ngFor = \\\"let task of tasks\\\">{{task.title}}<button (click) = \\\"getData(task._id)\\\">Show Detail</button><button (click) = \\\"deleteData(task._id)\\\">Delete</button><button (click) = \\\"editData(task._id)\\\">Edit</button></li>\\n</ul>\\n\\n<ul *ngIf = \\\"show\\\" >\\n  <h2>Details: </h2>\\n  <div *ngFor = \\\"let i of task\\\">\\n    <li>{{i.title}}</li>\\n    <li>{{i.description}}</li>\\n    <li>{{i.completed}}</li>\\n    \\n  </div>\\n</ul>\\n<h2>Add A New Task</h2>\\n<form (submit)=\\\"addData()\\\">\\n  <p> {{ newTask | json }} </p>\\n  Title: <input type=\\\"text\\\" name=\\\"newTask.title\\\" [(ngModel)]=\\\"newTask.title\\\" />\\n  Description: <input type=\\\"text\\\" name=\\\"newTask.description\\\" [(ngModel)]=\\\"newTask.description\\\" />\\n  <input type=\\\"submit\\\" value=\\\"Create Task\\\" />\\n</form>\\n\\n<div *ngIf = \\\"edit\\\">\\n  <h2>Edit this task</h2>\\n    <form *ngFor = \\\"let i of task\\\" (submit)=\\\"update(i._id, myform)\\\" #myform = \\\"ngForm\\\">\\n        Title: <input type=\\\"text\\\" [(ngModel)]=\\\"i.title\\\" name=\\\"title\\\" />\\n        Description: <input type=\\\"text\\\" [(ngModel)]=\\\"i.description\\\" name=\\\"description\\\" />\\n        <input type=\\\"submit\\\" value=\\\"Edit\\\" />\\n      </form>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  newTask: any;\n  tasks = [];\n  button : Boolean;\n  task = [];\n  show : Boolean;\n  edit : Boolean;\n  constructor(private _httpService: HttpService){}\n\n  ngOnInit(){\n    this.newTask = { title: \"\", description: \"\" }\n    this.showData();\n    this.button = false;\n    this.show = false;\n    this.edit = false;\n  }\n  // getTasksFromService(){\n  //   console.log(\"hi\")\n  //   var tempObservable = this._httpService.getTasks();\n  //   tempObservable.subscribe(data => {\n  //     console.log(\"Got our tasks!\", data);\n  //     this.tasks = data['data'];\n  // }\n\n  showData(){\n    this.button = true;\n    var tempObservable = this._httpService.getTasks();\n    tempObservable.subscribe(data => {\n      console.log(\"Got our tasks!\", data);\n      this.tasks = data['data'];\n  })\n}\n  getData(id){\n    // console.log(id)\n    this.show = true;\n    let observable = this._httpService.showTask(id);\n    observable.subscribe(data => {\n      this.task = data['data'];\n      console.log(\"show\", data)\n    })\n  }\n  deleteData(id){\n    console.log(id);\n    this.show = false;\n    let observable = this._httpService.deleteTask(id);\n    observable.subscribe(data => { console.log(\"removed\")});\n    this.showData();\n  }\n\n  addData(){\n    let data = this.newTask;\n    let observable = this._httpService.addTask(data);\n    observable.subscribe(data => { console.log(\"Added\")});\n    this.showData();\n  }\n\n  editData(id){\n    this.edit = true;\n    let observable = this._httpService.showTask(id);\n    observable.subscribe(data => {\n      this.task = data['data'];\n      console.log(\"edit\", data)\n    })\n  }\n\n  update(id, myform){\n    let newTask = {\n      _id: id;\n      title: myform.value.title;\n      description: myform.value.description;\n    }\n    console.log(myform)\n    let observable = this._httpService.editTask(id, newTask);\n    observable.subscribe(data => { console.log(\"Edited\")});\n    this.showData();\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport{ FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\n// {\n//   providedIn: 'root'\n// })\nexport class HttpService {\n\n  constructor(private _http: HttpClient){\n    this.getTasks();\n  }\n\ngetTasks(){\n  return this._http.get('/all');\n}\n\nshowTask(id){\n  return this._http.get('/show/' + id);\n}\n\ndeleteTask(id){\n  // console.log(id)\n  return this._http.delete('/remove/' + id);\n}\n\naddTask(data){\n  return this._http.post('/new', data);\n}\n\neditTask(id, newTask){\n  console.log(newTask)\n  return this._http.put('/edit/' + id, newTask);\n\n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}